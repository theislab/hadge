/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
    ]

    withName: SAMTOOLS_VIEW {
        ext.args   = '-S -b -q 10 -F 3844'
        publishDir = [
            enabled: false
        ]
    }

    withName: SAMTOOLS_INDEX {
        publishDir = [
            enabled: false
        ]
    }

    withName: UMITOOLS_DEDUP {
        ext.prefix = { "${meta.id}_dedup" }
        ext.args   = '--extract-umi-method=tag --umi-tag=UR --cell-tag=CB'
        publishDir = [
            enabled: false
        ]
    }

    withName: SAMTOOLS_SORT {
        ext.prefix = { "${meta.id}_sorted" }
        publishDir = [
            path: { "${params.outdir}/genetic/bam_qc/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_intermediates,
        ]
    }

    withName: FILTER_BAM {
        publishDir = [
            path: { "${params.outdir}/genetic/bam_common_variants/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_intermediates,
        ]
    }

    withName: CELLSNP_MODEA {
        ext.args   = {
            [
                "--genotype",
                "--cellTAG",
                params.cellsnp_celltag,
                "--UMItag",
                params.cellsnp_umitag,
                "--minCOUNT",
                params.cellsnp_mincount,
                "--minMAF",
                params.cellsnp_minmaf,
                params.cellsnp_inclflag ? "--inclFLAG ${params.cellsnp_inclflag}" : "",
                params.cellsnp_exclflag ? "--exclFLAG ${params.cellsnp_exclflag}" : "",
                "--minLEN",
                params.cellsnp_minlen,
                "--minMAPQ",
                params.cellsnp_minmapq,
                "--maxDEPTH",
                params.cellsnp_maxdepth,
                params.cellsnp_countorphan ? "--countORPHAN" : "",
            ].join(" ")
        }
        publishDir = [
            path: { "${params.outdir}/genetic/vireo/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: VIREO {
        ext.args   = {
            [
                "--genoTag",
                params.vireo_genotag,
                params.vireo_no_doublet ? "--noDoublet" : "",
                "--nInit",
                params.vireo_n_init,
                "--extraDonor",
                params.vireo_extra_donor,
                "--extraDonorMode",
                params.vireo_extra_donor_mode,
                params.vireo_force_learn_gt ? "--forceLearnGT" : "",
                params.vireo_ase_mode ? "--ASEmode" : "",
                params.vireo_no_plot ? "--noPlot" : "",
                "--randSeed",
                params.vireo_rand_seed,
                params.vireo_cell_range != "all" ? "--cellRange ${params.vireo_cell_range}" : "",
                params.vireo_cell_ambient_rnas ? "--callAmbientRNAs" : "",
            ].join(" ")
        }
        publishDir = [
            path: { "${params.outdir}/genetic/vireo/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: POPSCLE_DSCPILEUP {
        ext.args   = {
            [
                "--tag-group",
                params.dsc_pileup_tag_group,
                "--tag-UMI",
                params.dsc_pileup_tag_umi,
                "--cap-BQ",
                params.dsc_pileup_cap_bq,
                "--min-BQ",
                params.dsc_pileup_min_bq,
                "--min-MQ",
                params.dsc_pileup_min_mq,
                "--min-TD",
                params.dsc_pileup_min_td,
                "--excl-flag",
                params.dsc_pileup_excl_flag,
                "--min-total",
                params.dsc_pileup_min_total,
                "--min-uniq",
                params.dsc_pileup_min_uniq,
                "--min-snp",
                params.dsc_pileup_min_snp,
            ].join(" ")
        }
        publishDir = [
            path: { "${params.outdir}/genetic/popscle/dscpileup/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_intermediates,
        ]
    }

    withName: POPSCLE_DEMUXLET {
        ext.args   = '--field GT'
        publishDir = [
            path: { "${params.outdir}/genetic/popscle/demuxlet/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: POPSCLE_FREEMUXLET {
        publishDir = [
            path: { "${params.outdir}/genetic/popscle/freemuxlet/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: MTXCONVERT_RNA {
        publishDir = [
            path: { "${params.outdir}/hashing/mtxconvert/rna/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_intermediates,
        ]
    }

    withName: MTXCONVERT_HTO {
        publishDir = [
            path: { "${params.outdir}/hashing/mtxconvert/hto/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_intermediates,
        ]
    }

    withName: DEMUXEM {
        ext.args   = {
            [
                "--alpha-on-samples",
                params.demuxem_alpha_on_samples,
                "--min-num-genes",
                params.demuxem_min_num_genes,
                "--min-num-umis",
                params.demuxem_min_num_umis,
                "--min-signal-hashtag",
                params.demuxem_min_signal_hashtag,
                "--random-state",
                params.demuxem_random_state,
            ].join(" ")
        }
        publishDir = [
            path: { "${params.outdir}/hashing/demuxem/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: GMMDEMUX {
        ext.args   = {
            [
                "--threshold",
                params.gmmdemux_threshold,
                "--random_seed",
                params.gmmdemux_random_state,
                params.gmmdemux_extract ? "--extract ${params.gmmdemux_extract}" : "",
            ].join(" ")
        }
        publishDir = [
            path: { "${params.outdir}/hashing/gmm-demux/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: MULTIQC {
        ext.args   = { params.multiqc_title ? "--title \"${params.multiqc_title}\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
}
