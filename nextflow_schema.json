{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/hadge/main/nextflow_schema.json",
    "title": "nf-core/hadge pipeline parameters",
    "description": "Comprehensive pipeline for donor demultiplexing in single cell",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-exchange-alt",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "mode", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/hadge/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "mode": {
                    "type": "string",
                    "description": "Mode of the pipeline.",
                    "fa_icon": "fas fa-project-diagram",
                    "enum": ["genetic", "hashing", "rescue", "donor_match"],
                    "default": "rescue"
                },
                "match_donor": {
                    "type": "boolean",
                    "description": "Match donor.",
                    "fa_icon": "fas fa-user-check",
                    "default": false
                },
                "hash_tools": {
                    "type": "string",
                    "description": "Tools used for hash demultiplexing.",
                    "help_text": "If you want to use multiple, separate with a comma. The available tools are: htodemux, multiseq, cellhashr, demuxem, gmm-demux, hasheddrops, hashsolo",
                    "fa_icon": "fas fa-hashtag",
                    "default": "gmm-demux",
                    "pattern": "^(htodemux|multiseq|cellhashr|demuxem|gmm-demux|hasheddrops|hashsolo)(,(htodemux|multiseq|cellhashr|demuxem|gmm-demux|hasheddrops|hashsolo))*$"
                },
                "genetic_tools": {
                    "type": "string",
                    "description": "Tools used for genetic demultiplexing.",
                    "help_text": "If you want to use multiple, separate with a comma. The available tools are: vireo, demuxlet, freemuxlet, souporcell, cellsnp",
                    "fa_icon": "fas fa-dna",
                    "default": "vireo",
                    "pattern": "^(vireo|demuxlet|freemuxlet|souporcell|cellsnp)(,(vireo|demuxlet|freemuxlet|souporcell|cellsnp))*$"
                },
                "bam_qc": {
                    "type": "boolean",
                    "description": "Perform BAM QC.",
                    "fa_icon": "fas fa-chart-line",
                    "default": true
                },
                "common_variants": {
                    "type": "string",
                    "description": "File with common variants. If provided, the BAM files will be filtered to only include reads that overlap with the common variants.",
                    "fa_icon": "fas fa-dna",
                    "default": null,
                    "pattern": "^\\S+\\.vcf(\\.gz)?$",
                    "exists": true
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "save_intermediates": {
                    "type": "boolean",
                    "description": "Save intermediate files.",
                    "fa_icon": "fas fa-save",
                    "default": false
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The base path to the igenomes reference files",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "default": "s3://ngi-igenomes/igenomes/"
                }
            }
        },
        "demuxem_options": {
            "title": "demuxEM options",
            "type": "object",
            "fa_icon": "fas fa-vial",
            "description": "Options specific to the demuxEM tool for cell hashing demultiplexing.",
            "properties": {
                "demuxem_alpha_on_samples": {
                    "type": "number",
                    "description": "The Dirichlet prior concentration parameter (alpha) on samples. An alpha value < 1.0 will make the prior sparse.",
                    "default": 0.0,
                    "minimum": 0,
                    "maximum": 1,
                    "fa_icon": "fas fa-sliders-h"
                },
                "demuxem_min_num_genes": {
                    "type": "integer",
                    "description": "Only demultiplex cells/nuclei with at least this number of expressed genes.",
                    "default": 100,
                    "minimum": 0,
                    "fa_icon": "fas fa-sort-numeric-up"
                },
                "demuxem_min_num_umis": {
                    "type": "integer",
                    "description": "Only demultiplex cells/nuclei with at least this number of UMIs.",
                    "default": 100,
                    "minimum": 0,
                    "fa_icon": "fas fa-sort-amount-up"
                },
                "demuxem_min_signal_hashtag": {
                    "type": "number",
                    "description": "Any cell/nucleus with less than this count of hashtags from the signal will be marked as unknown.",
                    "default": 10,
                    "minimum": 0,
                    "fa_icon": "fas fa-signal"
                },
                "demuxem_random_state": {
                    "type": "integer",
                    "description": "The random seed used in the KMeans algorithm to separate empty ADT droplets from others.",
                    "default": 0,
                    "minimum": 0,
                    "fa_icon": "fas fa-random"
                },
                "demuxem_gender_genes": {
                    "type": "string",
                    "description": "Comma-separated list of gender-specific genes (e.g. Xist) for generating violin plots.",
                    "default": "",
                    "fa_icon": "fas fa-venus-mars"
                }
            }
        },
        "gmmdemux_options": {
            "title": "GMM-Demux options",
            "type": "object",
            "fa_icon": "fas fa-layer-group",
            "description": "Options specific to the GMM-Demux tool for cell hashing demultiplexing.",
            "properties": {
                "gmmdemux_extract": {
                    "type": "string",
                    "description": "Names of the HTO tag(s) to extract, separated by ','. Joint HTO samples are combined with '+', such as 'HTO_1+HTO_2'.",
                    "default": null,
                    "fa_icon": "fas fa-filter"
                },
                "gmmdemux_threshold": {
                    "type": "number",
                    "description": "The confidence threshold value for classification. A higher value leads to more stringent classification.",
                    "default": 0.8,
                    "minimum": 0,
                    "maximum": 1,
                    "fa_icon": "fas fa-percentage",
                    "help_text": "Requires a float in (0,1). Default value: 0.8"
                },
                "gmmdemux_random_state": {
                    "type": "integer",
                    "description": "The random seed used in the GaussianMixture algorithm.",
                    "default": 0,
                    "minimum": 0,
                    "fa_icon": "fas fa-dice"
                }
            }
        },
        "cellsnp_options": {
            "title": "CellSNP-lite options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options specific to the CellSNP-lite tool for genotyping bi-allelic SNPs on single cells.",
            "properties": {
                "cellsnp_celltag": {
                    "type": "string",
                    "description": "Tag for cell barcodes, e.g., CB for 10x Genomics. Set to 'None' for bulk RNA-seq or SMART-seq2.",
                    "default": "CB",
                    "fa_icon": "fas fa-tag"
                },
                "cellsnp_umitag": {
                    "type": "string",
                    "description": "Tag for UMI barcodes, e.g., UB for 10x Genomics. Set to 'None' for bulk RNA-seq or SMART-seq2 without UMIs.",
                    "default": "Auto",
                    "fa_icon": "fas fa-fingerprint"
                },
                "cellsnp_mincount": {
                    "type": "integer",
                    "description": "Minimum aggregated count (across cells) for SNPs to be included in the output.",
                    "default": 20,
                    "minimum": 0,
                    "fa_icon": "fas fa-sort-amount-down"
                },
                "cellsnp_minmaf": {
                    "type": "number",
                    "description": "Minimum minor allele frequency (MAF) for SNPs to be included in the output.",
                    "default": 0.0,
                    "minimum": 0.0,
                    "maximum": 0.5,
                    "fa_icon": "fas fa-percentage"
                },
                "cellsnp_inclflag": {
                    "type": "string",
                    "description": "Required flags in SAM/BAM: skip reads that don't have ALL of these flags. See SAM format specification for details.",
                    "default": "",
                    "fa_icon": "fas fa-flag"
                },
                "cellsnp_exclflag": {
                    "type": "string",
                    "description": "Excluding flags in SAM/BAM: skip reads that have ANY of these flags. See SAM format specification for details.",
                    "default": "",
                    "fa_icon": "fas fa-ban"
                },
                "cellsnp_minlen": {
                    "type": "integer",
                    "description": "Minimum read length (after clipping) for a read to be included.",
                    "default": 30,
                    "minimum": 0,
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "cellsnp_minmapq": {
                    "type": "integer",
                    "description": "Minimum mapping quality for a read to be included.",
                    "default": 20,
                    "minimum": 0,
                    "fa_icon": "fas fa-chart-line"
                },
                "cellsnp_maxdepth": {
                    "type": "integer",
                    "description": "Maximum read depth at a position per input file. Set to 0 for highest possible value.",
                    "default": 0,
                    "minimum": 0,
                    "fa_icon": "fas fa-layer-group"
                },
                "cellsnp_countorphan": {
                    "type": "boolean",
                    "description": "If true, do not skip anomalous read pairs (i.e., count orphan reads).",
                    "default": false,
                    "fa_icon": "fas fa-child"
                }
            }
        },
        "vireo_options": {
            "title": "Vireo options",
            "type": "object",
            "fa_icon": "fas fa-users",
            "description": "Options specific to the Vireo tool for donor demultiplexing from single-cell RNA-seq data.",
            "properties": {
                "vireo_genotag": {
                    "type": "string",
                    "description": "The tag for donor genotype in VCF file. Options: GT, GP, PL.",
                    "default": "GT",
                    "enum": ["GT", "GP", "PL"],
                    "fa_icon": "fas fa-tag"
                },
                "vireo_no_doublet": {
                    "type": "boolean",
                    "description": "If true, do not check for doublets during demultiplexing.",
                    "default": false,
                    "fa_icon": "fas fa-object-ungroup"
                },
                "vireo_n_init": {
                    "type": "integer",
                    "description": "Number of random initializations when GT needs to be learned.",
                    "default": 50,
                    "minimum": 1,
                    "fa_icon": "fas fa-redo"
                },
                "vireo_extra_donor": {
                    "type": "integer",
                    "description": "Number of extra donors in pre-cluster, when GT needs to be learned.",
                    "default": 0,
                    "minimum": 0,
                    "fa_icon": "fas fa-user-plus"
                },
                "vireo_extra_donor_mode": {
                    "type": "string",
                    "description": "Method for searching from extra donors. 'size': n_cell per donor; 'distance': GT distance between donors.",
                    "default": "distance",
                    "enum": ["size", "distance"],
                    "fa_icon": "fas fa-search"
                },
                "vireo_force_learn_gt": {
                    "type": "boolean",
                    "description": "If true, treat donor GT as prior only and learn genotypes from data.",
                    "default": false,
                    "fa_icon": "fas fa-graduation-cap"
                },
                "vireo_ase_mode": {
                    "type": "boolean",
                    "description": "If true, turn on SNP specific allelic ratio (ASE mode).",
                    "default": false,
                    "fa_icon": "fas fa-adjust"
                },
                "vireo_no_plot": {
                    "type": "boolean",
                    "description": "If true, turn off plotting GT distance.",
                    "default": false,
                    "fa_icon": "fas fa-chart-bar"
                },
                "vireo_rand_seed": {
                    "type": "integer",
                    "description": "Random seed for initialization.",
                    "default": 0,
                    "minimum": 0,
                    "fa_icon": "fas fa-random"
                },
                "vireo_cell_range": {
                    "type": "string",
                    "description": "Range of cells to process, e.g., '0-10000'. Default is 'all'.",
                    "default": "all",
                    "fa_icon": "fas fa-filter"
                },
                "vireo_cell_ambient_rnas": {
                    "type": "boolean",
                    "description": "If true, detect ambient RNAs in each cell (experimental feature).",
                    "default": false,
                    "fa_icon": "fas fa-flask"
                }
            }
        },
        "dsc_pileup_options": {
            "title": "DSC-Pileup options",
            "type": "object",
            "fa_icon": "fas fa-layer-group",
            "description": "Options specific to the DSC-Pileup tool for pileup generation from single-cell BAM files.",
            "properties": {
                "dsc_pileup_tag_group": {
                    "type": "string",
                    "description": "Tag representing readgroup or cell barcodes to partition the BAM file into multiple groups. For 10x Genomics, use CB.",
                    "default": "CB",
                    "fa_icon": "fas fa-tag"
                },
                "dsc_pileup_tag_umi": {
                    "type": "string",
                    "description": "Tag representing UMIs. For 10x Genomics, use UB.",
                    "default": "UB",
                    "fa_icon": "fas fa-fingerprint"
                },
                "dsc_pileup_cap_bq": {
                    "type": "integer",
                    "description": "Maximum base quality (higher BQ will be capped).",
                    "default": 40,
                    "minimum": 0,
                    "maximum": 60,
                    "fa_icon": "fas fa-arrow-up"
                },
                "dsc_pileup_min_bq": {
                    "type": "integer",
                    "description": "Minimum base quality to consider (lower BQ will be skipped).",
                    "default": 13,
                    "minimum": 0,
                    "fa_icon": "fas fa-arrow-down"
                },
                "dsc_pileup_min_mq": {
                    "type": "integer",
                    "description": "Minimum mapping quality to consider (lower MQ will be ignored).",
                    "default": 20,
                    "minimum": 0,
                    "fa_icon": "fas fa-chart-line"
                },
                "dsc_pileup_min_td": {
                    "type": "integer",
                    "description": "Minimum distance to the tail (lower will be ignored).",
                    "default": 0,
                    "minimum": 0,
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "dsc_pileup_excl_flag": {
                    "type": "integer",
                    "description": "SAM/BAM FLAGs to be excluded.",
                    "default": 3844,
                    "fa_icon": "fas fa-flag"
                },
                "dsc_pileup_min_total": {
                    "type": "integer",
                    "description": "Minimum number of total reads for a droplet/cell to be considered.",
                    "default": 0,
                    "minimum": 0,
                    "fa_icon": "fas fa-sort-amount-down"
                },
                "dsc_pileup_min_uniq": {
                    "type": "integer",
                    "description": "Minimum number of unique reads (determined by UMI/SNP pair) for a droplet/cell to be considered.",
                    "default": 0,
                    "minimum": 0,
                    "fa_icon": "fas fa-dna"
                },
                "dsc_pileup_min_snp": {
                    "type": "integer",
                    "description": "Minimum number of SNPs with coverage for a droplet/cell to be considered.",
                    "default": 0,
                    "minimum": 0,
                    "fa_icon": "fas fa-project-diagram"
                }
            }
        },
        "demuxlet_options": {
            "title": "Demuxlet options",
            "type": "object",
            "fa_icon": "fas fa-users-cog",
            "description": "Options specific to the Demuxlet tool for genotype-based demultiplexing of single-cell RNA-seq data.",
            "properties": {
                "demuxlet_field": {
                    "type": "string",
                    "description": "FORMAT field to extract the genotype, likelihood, or posterior from.",
                    "default": "GT",
                    "fa_icon": "fas fa-tag"
                },
                "demuxlet_geno_error_offset": {
                    "type": "number",
                    "description": "Offset of genotype error rate. [error] = [offset] + [1-offset]*[coeff]*[1-r2]",
                    "default": 0.1,
                    "minimum": 0,
                    "maximum": 1,
                    "fa_icon": "fas fa-percentage"
                },
                "demuxlet_geno_error_coeff": {
                    "type": "number",
                    "description": "Slope of genotype error rate. [error] = [offset] + [1-offset]*[coeff]*[1-r2]",
                    "default": 0.0,
                    "minimum": 0,
                    "maximum": 1,
                    "fa_icon": "fas fa-chart-line"
                },
                "demuxlet_r2_info": {
                    "type": "string",
                    "description": "INFO field name representing R2 value. Used for representing imputation quality.",
                    "default": "R2",
                    "fa_icon": "fas fa-info-circle"
                },
                "demuxlet_min_mac": {
                    "type": "integer",
                    "description": "Minimum minor allele frequency.",
                    "default": 1,
                    "minimum": 0,
                    "fa_icon": "fas fa-sort-numeric-down"
                },
                "demuxlet_min_callrate": {
                    "type": "number",
                    "description": "Minimum call rate.",
                    "default": 0.5,
                    "minimum": 0,
                    "maximum": 1,
                    "fa_icon": "fas fa-phone"
                },
                "demuxlet_alpha": {
                    "type": "string",
                    "description": "Grid of alpha to search for.",
                    "default": "0.1,0.2,0.3,0.4,0.5",
                    "fa_icon": "fas fa-sliders-h"
                },
                "demuxlet_doublet_prior": {
                    "type": "number",
                    "description": "Prior probability of doublet.",
                    "default": 0.5,
                    "minimum": 0,
                    "maximum": 1,
                    "fa_icon": "fas fa-object-group"
                }
            }
        },
        "freemuxlet_options": {
            "title": "Freemuxlet options",
            "type": "object",
            "fa_icon": "fas fa-users",
            "description": "Options specific to the Freemuxlet tool for reference-free genotype-based demultiplexing.",
            "properties": {
                "freemuxlet_doublet_prior": {
                    "type": "number",
                    "description": "Prior probability of doublet.",
                    "default": 0.5,
                    "minimum": 0,
                    "maximum": 1,
                    "fa_icon": "fas fa-object-group"
                },
                "freemuxlet_geno_error": {
                    "type": "number",
                    "description": "Genotype error parameter per cluster.",
                    "default": 0.1,
                    "minimum": 0,
                    "maximum": 1,
                    "fa_icon": "fas fa-exclamation-triangle"
                },
                "freemuxlet_bf_thres": {
                    "type": "number",
                    "description": "Bayes Factor Threshold used in the initial clustering.",
                    "default": 5.41,
                    "minimum": 0,
                    "fa_icon": "fas fa-balance-scale"
                },
                "freemuxlet_frac_init_clust": {
                    "type": "number",
                    "description": "Fraction of droplets to be clustered in the very first round of initial clustering procedure.",
                    "default": 1.0,
                    "minimum": 0,
                    "maximum": 1,
                    "fa_icon": "fas fa-object-ungroup"
                },
                "freemuxlet_iter_init": {
                    "type": "integer",
                    "description": "Iteration for initial cluster assignment (set to zero to skip the iterations).",
                    "default": 10,
                    "minimum": 0,
                    "fa_icon": "fas fa-redo"
                },
                "freemuxlet_keep_init_missing": {
                    "type": "boolean",
                    "description": "Keep missing cluster assignment as missing in the initial iteration.",
                    "default": false,
                    "fa_icon": "fas fa-question-circle"
                },
                "freemuxlet_randomize_singlet_score": {
                    "type": "boolean",
                    "description": "Randomize the singlet scores to test its effect.",
                    "default": false,
                    "fa_icon": "fas fa-random"
                },
                "freemuxlet_seed": {
                    "type": "integer",
                    "description": "Seed for random number (use clocks if not set).",
                    "default": 0,
                    "minimum": 0,
                    "fa_icon": "fas fa-dice"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/demuxem_options"
        },
        {
            "$ref": "#/$defs/gmmdemux_options"
        },
        {
            "$ref": "#/$defs/cellsnp_options"
        },
        {
            "$ref": "#/$defs/vireo_options"
        },
        {
            "$ref": "#/$defs/dsc_pileup_options"
        },
        {
            "$ref": "#/$defs/demuxlet_options"
        },
        {
            "$ref": "#/$defs/freemuxlet_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
